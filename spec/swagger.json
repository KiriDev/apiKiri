{
  "swagger": "2.0",
  "schemes": [
    "http",
    "https"
  ],
  "host": "us-central1-db-kiri.cloudfunctions.net",
  "basePath": "",
  "info": {
    "description": "This is an API for direct connection and data synchronization.\n# Introduction\nThis API allows you to Read, Write, Modify and Delete information from your clients and \nthus create a link between our systems.\n\n# API Specification\nThe goal of the API Specification is to define a standard, language-agnostic interface which allows both humans\nand computers to discover and understand the capabilities of the service without access to source code,\ndocumentation, or through network traffic inspection. A consumer can understand and interact with the remote service with\na minimal amount of implementation logic. Similar to what interfaces have done for lower-level programming,\nthis API removes the guesswork in calling the service.",
    "version": "1.0",
    "title": "Docs for Kiri Api",
    "termsOfService": "https://kiri.mobi/web/politicadeprivacidad.html",
    "contact": {
      "email": "dev@kiri.mobi",
      "url": "https://kiri.mobi"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "x-logo": {
      "url": "https://firebasestorage.googleapis.com/v0/b/db-kiri.appspot.com/o/public%2Flogo%2Fkiri.png?alt=media&token=c98d1731-00ac-404b-99de-d8ac1b06d067"
    }
  },
  "produces": [
    "application/json",
    "application/xml",
    "text/csv"
  ],
  "consumes": [
    "application/json",
    "application/xml"
  ],
  "tags": [
    {
      "name": "Read",
      "description": "Example Read operations"
    },
    {
      "name": "Set",
      "description": "Example Set operations"
    },
    {
      "name": "Update",
      "description": "Example Update operations"
    },
    {
      "name": "Delete",
      "description": "Example Delete operations"
    },
    {
      "name": "Conquer Struct",
      "description": "## CONQUER \n ```json \n'REF':\n{\n   'sellers': true,\n   'notBuy': true,\n   'apiSalesNewClients': true,\n   'routes': true,\n   'collections': true,\n   'groupers': true,\n   'iva': true,\n   'currentAccount': true,\n   'clients': true,\n   'apiSalesClients': true,\n   'banks': true,\n   'reasonsNotBuy': true,\n   'salesCondition': true,\n   'articles': true,\n   'news': true,\n   'orders': true,\n   'priceList': true\n}"
    },
    {
      "name": "Duty Struct",
      "description": "## Duty \n ```json \n {\r\n  \"action\": \"set\",\r\n  \"version\": \"1.0\",\r\n  \"token\": \"Tzc9amhGTH2cHvmao1t2\",\r\n  \"ref\": \"sellers\",\r\n  \"data\": {\r\n    00002: {\r\n      \"name\": \"Luis Alterio\",\r\n      \"profileImage\": \"https:\/\/URL\/profile-5.jpg\",\r\n      \"code\": \"00002\",\r\n      \"password\": \"00002\",\r\n      \"id\": \"30400502\"\r\n    },\r\n    \"00007\": {\r\n      \"name\": \"Lucas Archer\",\r\n      \"profileImage\": \"https:\/\/URL\/profile-6.jpg\",\r\n      \"code\": \"00007\",\r\n      \"password\": \"00007\",\r\n      \"id\": \"30400507\"\r\n    }\r\n  }\r\n}"
    }
  ],
  "paths": {
    "/transaction/": {
      "parameters": [
      ],
      "post": {
        "tags": [
          "Read"
        ],
        "summary": "Get information from database",
        "description": "Using the `action` parameter in read, you can get information from database.\nIt is possible to specify the reference table `ref` and the key of the value `key` in the search.",
        "operationId": "readDB",
        "parameters": [
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "required": true,
            "type": "string",
            "x-example": "Content-Type:application/json"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Read specific data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BodyRead"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "name": "hernan bruno",
                "profileImage": "https://URL/profile-4.jpg",
                "code": "00001",
                "password": "00001",
                "id": "30400500"
              }
            }
          },
          "403": {
            "description": "",
            "examples": {
              "application/json": {
                "Error": "Invalid Token",
                "Request": {
                  "action": "read",
                  "version": "1.0",
                  "token": "Non-existent-Token",
                  "ref": "sellers",
                  "key": "00001"
                }
              }
            }
          },
          "400": {
            "description": "",
            "examples": {
              "application/json": {
                "Error": "Invalid Values",
                "Request": {
                  "action": "Invalid action or",
                  "version": "Invalid version or",
                  "token": "Tzc9amhGTH2cHvmao1t2",
                  "ref": "Invalid Ref or",
                  "key": "Invalid Key"
                }
              }
            }
          }
        }
      }
    },
    "/transaction": {
      "parameters": [
      ],
      "post": {
        "tags": [
          "Set"
        ],
        "summary": "Set information in database",
        "description": "Using the `action` parameter in set, you can set information in database.\nIt is necessary to specify the reference table `ref`.\n\nThe information must be established in JSON format in the `data` field. Each new value must be indexed by key.\n\n   ### Accepted Values to be ref \n ```json \n'REF':\n{\n   'sellers': true,\n   'notBuy': true,\n   'apiSalesNewClients': true,\n   'routes': true,\n   'collections': true,\n   'groupers': true,\n   'iva': true,\n   'currentAccount': true,\n   'clients': true,\n   'apiSalesClients': true,\n   'banks': true,\n   'reasonsNotBuy': true,\n   'salesCondition': true,\n   'articles': true,\n   'news': true,\n   'orders': true,\n   'priceList': true\n}",
        "operationId": "setDB",
        "parameters": [
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "required": true,
            "type": "string",
            "x-example": "Content-Type:application/json"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Set specific data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BodySet"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "Success": "Successfully data!"
              }
            }
          },
          "403": {
            "description": "",
            "examples": {
              "application/json": {
                "Error": "Invalid Token",
                "Request": {
                  "action": "set",
                  "version": "1.0",
                  "token": "Non-existent-Token",
                  "ref": "sellers",
                  "key": "00001"
                }
              }
            }
          },
          "400": {
            "description": "",
            "examples": {
              "application/json": [{
                "Error": "Invalid reference",
                "Accepted Values": {
                  "clients": true,
                  "apiSalesClients": true,
                  "banks": true,
                  "reasonsNotBuy": true,
                  "salesCondition": true,
                  "articles": true,
                  "news": true,
                  "orders": true,
                  "priceList": true,
                  "sellers": true,
                  "notBuy": true,
                  "apiSalesNewClients": true,
                  "routes": true,
                  "collections": true,
                  "groupers": true,
                  "iva": true,
                  "currentAccount": true
                }
              },
                {
                  "Error": "No Data",
                  "Request": {
                    "action": "set",
                    "version": "1.0",
                    "token": "Tzc9amhGTH2cHvmao1t2",
                    "ref": "sellers"
                  }
                }]
            }
          }
        }
      }
    },
    "/transaction/#": {
      "parameters": [
      ],
      "post": {
        "tags": [
          "Update"
        ],
        "summary": "Update information in database",
        "description": "Using the `action` parameter in update, you can update information in database.\nIt is necessary to specify the reference table `ref`.\n\nThe information must be established in JSON format in the `data` field. Each existing value must be indexed by key.\n\nThe key must necessarily exist.\n\n   ### Accepted Values to be ref \n ```json \n'REF':\n{\n   'sellers': true,\n   'notBuy': true,\n   'apiSalesNewClients': true,\n   'routes': true,\n   'collections': true,\n   'groupers': true,\n   'iva': true,\n   'currentAccount': true,\n   'clients': true,\n   'apiSalesClients': true,\n   'banks': true,\n   'reasonsNotBuy': true,\n   'salesCondition': true,\n   'articles': true,\n   'news': true,\n   'orders': true,\n   'priceList': true\n}",
        "operationId": "updateDB",
        "parameters": [
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "required": true,
            "type": "string",
            "x-example": "Content-Type:application/json"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Update specific data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BodySet"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "Success": "Successfully updated data!"
              }
            }
          },
          "403": {
            "description": "",
            "examples": {
              "application/json": {
                "Error": "Invalid Token",
                "Request": {
                  "action": "update",
                  "version": "1.0",
                  "token": "Non-existent-Token",
                  "ref": "sellers",
                  "key": "00001"
                }
              }
            }
          },
          "400": {
            "description": "",
            "examples": {
              "application/json": [{
                "Error": "Invalid reference",
                "Accepted Values": {
                  "clients": true,
                  "apiSalesClients": true,
                  "banks": true,
                  "reasonsNotBuy": true,
                  "salesCondition": true,
                  "articles": true,
                  "news": true,
                  "orders": true,
                  "priceList": true,
                  "sellers": true,
                  "notBuy": true,
                  "apiSalesNewClients": true,
                  "routes": true,
                  "collections": true,
                  "groupers": true,
                  "iva": true,
                  "currentAccount": true
                }
              },
                {
                  "Error": "No Data",
                  "Request": {
                    "action": "update",
                    "version": "1.0",
                    "token": "Tzc9amhGTH2cHvmao1t2",
                    "ref": "sellers"
                  }
                }]
            }
          }
        }
      }
    },
    "/transaction/?": {
      "parameters": [
      ],
      "post": {
        "tags": [
          "Delete"
        ],
        "summary": "Delete information from database",
        "description": "Using the `action` parameter in delete, you can delete information from database.\n It is possible to specify the reference table `ref` and the key of the value `key` in this operation. \n\nThe key must necessarily exist in database.\n\n",
        "operationId": "deleteDB",
        "parameters": [
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "required": true,
            "type": "string",
            "x-example": "Content-Type:application/json"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Delete specific data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BodyRead"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "Success": "Data deleted successfully!"
              }
            }
          },
          "403": {
            "description": "",
            "examples": {
              "application/json": {
                "Error": "Invalid Token",
                "Request": {
                  "action": "delete",
                  "version": "1.0",
                  "token": "Non-existent-Token",
                  "ref": "sellers",
                  "key": "00001"
                }
              }
            }
          },
          "400": {
            "description": "",
            "examples": {
              "application/json": [{
                "Error": "Invalid reference",
                "Accepted Values": {
                  "clients": true,
                  "apiSalesClients": true,
                  "banks": true,
                  "reasonsNotBuy": true,
                  "salesCondition": true,
                  "articles": true,
                  "news": true,
                  "orders": true,
                  "priceList": true,
                  "sellers": true,
                  "notBuy": true,
                  "apiSalesNewClients": true,
                  "routes": true,
                  "collections": true,
                  "groupers": true,
                  "iva": true,
                  "currentAccount": true
                }
              },
                {
                  "Error": "Invalid Values",
                  "Request": {
                    "action": "delete",
                    "version": "1.0",
                    "token": "Tzc9amhGTH2cHvmao1t2",
                    "ref": "sellers",
                    "key": "Non-existent-Key"
                  }
                }]
            }
          }
        }
      }
    },
    "/struct/": {
      "parameters": [
      ]
    }
  },
  "definitions": {
    "BodyRead": {
      "type": "object",
      "required":["action","version","token"],
      "properties": {
        "action": {
          "description": "read  &nbsp;&nbsp;->&nbsp;&nbsp; (Action to Read)",
          "type": "string",
          "example": "read"
        },
        "version": {
          "description": "1.0  &nbsp;&nbsp;&nbsp;&nbsp;->&nbsp;&nbsp; (Current Version)",
          "type": "string",
          "example": "1.0"
        },
        "token": {
          "description": "Token of the environment",
          "type": "string",
          "example": "Tzc9amhGTH2cHvmao1t2"
        },
        "ref": {
          "description": "Reference Table",
          "type": "string",
          "example": "sellers",
          "x-nullable": true
        },
        "key": {
          "description": "Key of the Value",
          "type": "string",
          "example": "00001",
          "x-nullable": true
        }
      }
    },
    "BodySet": {
      "type": "object",
      "required":["action","version","token","ref","data"],
      "properties": {
        "action": {
          "description": "set  &nbsp;&nbsp;->&nbsp;&nbsp; (Action to Set)",
          "type": "string",
          "example": "set"
        },
        "version": {
          "description": "1.0  &nbsp;&nbsp;&nbsp;&nbsp;->&nbsp;&nbsp; (Current Version)",
          "type": "string",
          "example": "1.0"
        },
        "token": {
          "description": "Token of the environment",
          "type": "string",
          "example": "Tzc9amhGTH2cHvmao1t2"
        },
        "ref": {
          "description": "Reference Table",
          "type": "string",
          "example": "sellers"
        },
        "data": {
          "description": "Data to Set",
          "type": "string",
          "example": {
            "00002":{
              "name": "Luis Alterio",
              "profileImage": "https://URL/profile-5.jpg",
              "code": "00002",
              "password": "00002",
              "id": "30400502"
            },
            "00007":{
              "name": "Lucas Archer",
              "profileImage": "https://URL/profile-6.jpg",
              "code": "00007",
              "password": "00007",
              "id": "30400507"
            }
          }
        }
      }
    }
  }
}
