---
swagger: '2.0'
schemes:
- http
- https
host: us-central1-db-kiri.cloudfunctions.net
basePath: "/"
info:
  description: "This is an API for direct connection and data synchronization.\n#
    Introduction\nThis API allows you to Read, Write, Modify and Delete information
    from your clients and \nthus create a link between our systems.\n\n# API Specification\nThe
    goal of the API Specification is to define a standard, language-agnostic interface
    which allows both humans\nand computers to discover and understand the capabilities
    of the service without access to source code,\ndocumentation, or through network
    traffic inspection. A consumer can understand and interact with the remote service
    with\na minimal amount of implementation logic. Similar to what interfaces have
    done for lower-level programming,\nthis API removes the guesswork in calling the
    service. \n\n# URL\n https://us-central1-db-kiri.cloudfunctions.net/transaction/"
  version: '1.1'
  title: Docs for Kiri Api
  termsOfService: https://kiri.mobi/web/politicadeprivacidad.html
  contact:
    email: dev@kiri.mobi
    url: https://kiri.mobi
  license:
    name: Google Cloud Platform
    url: https://cloud.google.com/terms/
  x-logo:
    url: https://firebasestorage.googleapis.com/v0/b/db-kiri.appspot.com/o/public%2Flogo%2Fkiri.png?alt=media&token=c98d1731-00ac-404b-99de-d8ac1b06d067
produces:
- application/json
- application/xml
- text/csv
consumes:
- application/json
- application/xml
tags:
- name: Read
  description: Example Read operations
- name: Set
  description: Example Set operations
- name: Update
  description: Example Update operations
- name: Delete
  description: Example Delete operations
- name: Duty Struct
  description: |
    ## DUTY

    ```json
    {
        "apiSalesClients": {
            "00001": { // client key
                "k": "string", // client key
                "e": "string", // email
                "p": "string", // password
                "sp": 0, // setPassword  number 0 | 1   *default 0
                "t":"number" // time added
            }
        },
        "apiSalesNewClients": {
            "Yyxxes1PqR4T8sRock8X": { // client key
                "a": "string", //address
                "bn": "string", // business name
                "n": "string", // client name
                "e": "string", // email
                "l": "string", // locality
                "p": "string", // phone number
                "s": "string", // state
                "v": "string", // vat condition key
                "k":"string",// key
                "t":"number" // time added
            }
        },
        "articles": {
            "L12do7ZoaLn8KDmmE5uz": { // article key
                "i": "string", // url image
                "n": "string", //   name
                "nc": 100, // number | net cost
                "b":"string",// brand key
                "k": "string", // article key
                "w": "string", // weight
                "t":"number", // time added/changed
                "dum": "string", // default unit of measurement
                "um": {     //unit of measurement
                    "00001": {
                        "k": "string", // key
                        "e": 1, // equals | number *default 1
                        "n": "string" // name
                    }
                }
            }
        },
        "articlesSettings": {
            "Vf3A4qxoWCHPoYdYjG3J": {
                "a": "number", //amount
                "b": { // bonuses list
                    "0101": {
                        "a": "number", // amount
                        "f": "boolean", // fixed * bool true|false
                        "n": "string", // name
                        "d": "string", // description
                        "k":"string" // key
                    }
                },
                "k":"string",//key
                "t":"number",//time added
                "s": { // surcharges list
                    "0101": {
                        "a": "number", // amount
                        "f": "boolean", // fixed * bool true|false
                        "n": "string",// name
                        "d": "string", // description
                        "k":"string" // key
                    }
                },
            }
        },
        "banks": {
            "0001": { // bank code
                "k": "string", // bank code
                "n": "string",   // bank name
                "t":"number"// time added/changed
            }
        },
        "brands": {
            "00001": { // brand key
                "k": "string", // brand key
                "n": "string",   // brand name
                "t":"number"// time added/changed
            }
        },
        "clients": {
            "00001": { // client key
                "a": {  // address list
                    "00001": {
                        "a": "string", // address
                        "c": "string", // country
                        "d": "string", // description | example: "work"
                        "n": "string", // neighborhood
                        "s": "string", // state
                        "z": "string" //  zip
                    }
                },
                "e": {  //email list
                    "00001": {
                        "d": "string", // description | example: "work"
                        "e": "string" //  email
                    }
                },
                "f": { //fiscal info
                    "c": "string", // cuit | cuil
                    "v": "string" // vat key
                },
                "i": "string", //id number
                "it": "string", // id type | like dni, passport,root
                "k": "string", // client key
                "n": "string", // client name
                "bn": "string", // business name
                "p": {  //phone list
                    "00001": { //phone key
                        "k":"string", //phone key
                        "d": "string", //description
                        "p": "string"  // phone number
                    }
                },
                "pl": "string", // price list key
                "pi": "string", // url profile image
                "sc": "string", // sale condition key
                "s": { //sellers list
                    "00001": true // seller key * bool true | false
                },
                "b": { //bonus list
                    "WXzdjUjQXwWXOWSNWmENH": { //bonus key
                        "k":"string",//key
                        "a": 10, //amount
                        "f": "boolean", // fixed  * bool true | false
                        "n": "string",// name
                        "d": "string", // description
                    }
                },
                "su": { //surcharge list
                    "WXzdjUjQXwWXOWSNWmENH": { //surcharge key
                        "k":"string",//key
                        "a": 10, //amount
                        "f": "boolean", // fixed  * bool true | false
                        "n": "string",// name
                        "d": "string", // description
                    }
                },
                "ta": { // taxes list
                    "WXzdjUjQXwWXOWSNWmENH": { //tax key
                        "k":"string",//key
                        "a": 10, //amount
                        "f": "boolean", // fixed * bool true | false
                        "n": "string", // name
                        "d": "string",  // description
                    }
                },
                "t":"number" // time added/changed
            }
        },
        "collections": {
            "VRfZ4okA0xQAZ3oE5GKj": { // collection key
                "c": { // client info
                    "f": { // fiscal info
                        "c": "string", // cuil-cuit
                        "v": "string", // vat key
                    },
                    "i": "string",// id number
                    "it":"string", // id type, like dni,root,passport
                    "n": "string", //ma,e
                    "pl": "string",// price list key
                    "sc": "string",// sale condition key
                },
                "id": { // imputed documents list
                    "1GxFloYeHzVMNXxyVtEM": { // imputed document key
                        "c": { // client info
                            "k": "string", // client key
                            "n": "string", // client name
                        },
                        "d": { // document info
                            "c": "string", // document code
                            "d": "number", // date
                            "dd": "number", // due date
                            "n": "string", // number
                            "ia": "number",// initial amount
                            "pa": "number", // paid amount
                            "pos": "string", // point of sale
                            "qn": "number", //quote number
                            "t": "string", // type
                        },
                        "k": "string", //document key
                    },
                },
                "l": "string",// license key
                "p": { // position
                    "c": { //coordinates
                        "la": "string",// latitude
                        "lo": "string" // longitude
                    },
                    "m": "boolean" // mocked
                },
                "py": { // payments list
                    "56vVH3Qeg7ixH7bajFO4": { //payment key
                        "a": "number", // amount
                        "k": "string",// key
                        "m": "number",// method
                        "t": "number",// time
                    },
                },
                "s": "string", // seller key
                "st": "number", // status
                "t": "number", // time
                "r": "number", // receipt number
                "ta": "number",// total amount
                "k":"string"//key
            }
    					},
        "companies": {
            "00001": {
                "k":"string",// company key
                "n": "string", //    name
                "t":"number" // time added/changed
            }
        },
        "currentAccount": {
            "1GxFloYeHzVMNXxyVtEM": { // key
                "c": { // client info
                    "k": "string", // client key
                    "n": "string", // client name
                },
                "d": { // document info
                    "c": "string", // document code
                    "d": "number", // date
                    "dd": "number", // due date
                    "n": "string", // number
                    "ia": "number",// initial amount
                    "pa": "number", // paid amount
                    "pos": "string", // point of sale
                    "qn": "number", //quote number
                    "t": "string", // type
                },
                "k": "string", //document key
                "t":"number" // time added/changed
            }
        },
        "deposits": {
            "HttPRGVB7m7Ie8uGJHzX": { // deposit key
                "k":"string", // key
                "n": "string",  //name
                "t":"number"// time added/changed

            }
        },
        "groupers": {
            "Uiw2pQUS3gU8XTieMVna": { // key
                "a": { // articles list
                    "QU63Lm6CaMspN0qXEuVR": { // article key
                        "k":"string", // key
                        "o": "number", // order
                    },
                },
                "g": { // groupers list
                    //... repeat groupers structure
                },
                "k":"string", // key
                "n": "string", //name
                "i": "string", // image
                "t":"number"// time added/changed

            }
        },
        "news": {
            "TtQ6O940SuaONNLpY1Hw": { //key
                "de": { // destination
                    "2": "boolean" // destination key * bool true | false
                },
                "k":"string", // key
                "i": "string",// image
                "tm": "number", // time of new
                "ti": "string", // title
                "d": "string", // description
                "t":"number" // time added/changed
            }
        },
        "notBuy": {
            "MY4Md2hxTnhZDjz4Fg0f": {
                "c": { // client info
                    "f": { // fiscal info
                        "c": "string", // cuil-cuit
                        "v": "string", // vat key
                    },
                    "i": "string",// id number
                    "it":"string", // id type, like dni,root,passport
                    "n": "string", //ma,e
                    "pl": "string",// price list key
                    "sc": "string",// sale condition key
                },
                "l": "string",// license key
                "p": { // position
                    "c": { //coordinates
                        "la": "string",// latitude
                        "lo": "string" // longitude
                    },
                    "m": "boolean" // mocked
                },
                "r": { // reason
                    "k": "string",// key
                    "n": "string" // name
                },
                "s": "string", // seller key
                "t": "number" // time
            }
        },
        "offers": {
            "0001":{ // offer key
                "de": { // destination
                    "2": "boolean" // destination key * bool true | false
                },
                "k":"string", // key
                "i": "string",// image
                "tm": "number", // time of new
                "ti": "string", // title
                "d": "string", // description
                "p":"string", // pack key
                "t":"number" // time added/changed
            }

        },
        "orders": {
            "sBzIu8La6HBOhjMQ1ySR": {
                "c": { // client info
                    "f": { // fiscal info
                        "c": "string", // cuil-cuit
                        "v": "string", // vat key
                    },
                    "i": "string",// id number
                    "it":"string", // id type, like dni,root,passport
                    "n": "string", //ma,e
                    "pl": "string",// price list key
                    "sc": "string",// sale condition key
                },
                "l": "string",// license key
                "p": { // position
                    "c": { //coordinates
                        "la": "string",// latitude
                        "lo": "string" // longitude
                    },
                    "m": "boolean" // mocked
                },
                "f": "boolean",// finished
                "gb": { // global bonus
                    "f": "boolean", // fixed
                    "a": "number" // amount
                },
                "tt": { // totals
                    "to": "number", // total order
                    "tp": "number", // total packs
                    "t": "number" // total
                },
                "ts": "number", // time start
                "te": "number", // time end
                "s": "number", // state
                "se": "string", // seller key
                "sc": "string", // sale condition key
                "or": "number", // origin
                "co": "string",// company
                "ob": "qwe",// observation
                "o": { // order detail
                    "dTjnqBSYWqIIJlyRosNo": {
                        "b": "number", // bonus
                        "e": { // extras list
                            "00001": { // extra key
                                "di": "boolean",// discount
                                "s": "boolean",// surcharge
                                "a": "number", //amount
                                "f": "boolean", // fixed * bool true|false
                                "n": "string", // name
                                "d": "string", // description
                                "k": "string" // key
                            }
                        },
                        "k": "string",// key
                        "n": "string",//name
                        "nc": "number",// net cost
                        "pld": { //price list data
                            "t": { // taxes list
                                "00001": { // tax key
                                    "a": "number", //amount
                                    "f": "boolean", // fixed * bool true|false
                                    "n": "string", // name
                                    "d": "string", // description
                                    "k": "string" // key
                                }
                            },
                            "f": { // forced price
                                "a": "number", //amount
                                "f": "boolean", // fixed * bool true|false
                            },
                            "n": "string",// name
                            "b": { // bonuses list
                                "00001": { // bonus key
                                    "a": "number", //amount
                                    "f": "boolean", // fixed * bool true|false
                                    "n": "string", // name
                                    "d": "string", // description
                                    "k": "string" // key
                                }
                            },
                            "k": "string" // key
                        },
                        "q": "number",// quantity
                        "r": "string",// reference
                        "s": "number",// subtotal
                        "t": "number"// total
                    }
                },
                "t":"number", // time added
                "k":"string" // key
            },
        },
        "packs": {
            "ML14VV97ZRhXzvT6F2WT": { // pack key
                "a": { // articles list
                    "yndo39xi2": { // article key
                        "k": "string",// key
                        "q": "number", // quantity
                        "b": { //bonus
                            "a": "number", //amount
                            "f": "boolean" // fixed * boolean true|false
                        }
                    }
                },
                "fp": { //foreced Price
                    "a": "number", //amount
                    "f": "boolean" //fixed * boolean true|false
                },
                "b": { // bonus
                    "a": "number", //amount
                    "f": "boolean", // fixed * boolean true|false
                },
                "n": "string", //name
                "k": "string", // key
                "t":"number"// time added/changed
            }
        },
        "priceList": {
            "ZYV06DpEFIAwBFY6kYKL": { // price list key
                "a": { // articles list
                    "L12do7ZoaLn8KDmmE5uz": { // it must be the key to a article
                        "f": { // forced price
                            "a": "number", //amount
                            "f": "boolean", // fixed * bool true|false
                        },
                        "u":{ // utility
                            "a":"number", //amount
                            "f":"boolean" // fixed * bool true|false
                        },
                        "t": { // taxes list
                            "00001": { // tax key
                                "a": "number", //amount
                                "f": "boolean", // fixed * bool true|false
                                "n": "string", // name
                                "d": "string", // description
                                "k": "string" // key
                            }
                        },
                        "b": { // bonuses list
                            "00001": { // bonus key
                                "a": "number", //amount
                                "f": "boolean", // fixed * bool true|false
                                "n": "string", // name
                                "d": "string", // description
                                "k": "string" // key
                            }
                        },
                        "k": "string" // key
                    }
                },
                "k": "string", // key
                "n": "string", //name
                "e": { // extras list
                    "00001": { // extra key
                        "di": "boolean",// discount
                        "s": "boolean",// surcharge
                        "a": "number", //amount
                        "f": "boolean", // fixed * bool true|false
                        "n": "string", // name
                        "d": "string", // description
                        "k": "string" // key
                    }
                }
            }
        },
        "reasonsNotBuy": {
            "89n6Tewj2gDp3f3Gpghi": { // reason key
                "n": "string",// name
                "t":"number", // time added/changed
                "k":"string"  // key
            }
        },
        "routes": {
            "00001":{ //route key
                "cl": {
                 "00001": { // it must be the key to a client
                        "k":"string",// key
                        "o": "number" // client order
                    }
                },
                "d": { // days list
                    "0": "boolean" // day number 0:Sunday, 6:Saturday | true
                },
                "n": "string", // name
                "s": { // sellers list
                    "00001": "boolean" // it must be the key to a seller  | true
               },
               "k":"string",//key
               "t":"number" // time added/changed

            }
        },
        "salesCondition": {
            "SmEzpw5WdjQNWXUOHUJn": {
                "b": { // bonuses list
                    "0101": {
                        "a": "number", // amount
                        "f": "boolean", // fixed * bool true|false
                        "n": "string", // name
                        "d": "string", // description
                        "k":"string" // key
                    }
                },
                "d": "string", // description
                "mc": "string",// money code
                "n": "string", // name
                "s": { // surcharges list
                    "0101": {
                        "a": "number", // amount
                        "f": "boolean", // fixed * bool true|false
                        "n": "string",// name
                        "d": "string", // description
                        "k":"string" // key
                    }
                },
                "t":"number" // time added/changed
            }
        },
        "sellers": {
            "00001": {

                "i": "string", // id number
                "it":"string", // id type, like dni,root,passport
                "k":"string", //key
                "n": "string", // name
                "p": "string", //password
                "pi": "string", // profile image
                "t":"number" // time added/changed
            }
        },
        "stock": {
            "00100001": { // key composed by deposit key and article key
                "a": "string", //it must be a key of a article
                "d": "string", // it must be a key of a deposit
                "q": "number", // quantity
                "k":"string",  // key
                "t":"number"// time added/changed
            }
        },
        "vat": {
            "001": { // vat key
                "n": "string", // name
                "k":"string", // key
                "t":"number" //time added/changed
            }
        }
    }
    ```
- name: Conquer Struct
  description: |
    ## CONQUER

    ```json
    {
        "apiSalesClients": {
            "00001": { // client key
                "k": "string", // client key
                "e": "string", // email
                "p": "string", // password
                "sp": 0, // setPassword  number 0 | 1   *default 0
                "t":"number" // time added
            }
        },
        "apiSalesNewClients": {
            "Yyxxes1PqR4T8sRock8X": { // client key
                "a": "string", //address
                "bn": "string", // business name
                "n": "string", // client name
                "e": "string", // email
                "l": "string", // locality
                "p": "string", // phone number
                "s": "string", // state
                "v": "string", // vat condition key
                "k":"string",// key
                "t":"number" // time added
            }
        },
        "articles": {
            "L12do7ZoaLn8KDmmE5uz": { // article key
                "i": "string", // url image
                "n": "string", //   name
                "nc": 100, // number | net cost
                "b":"string",// brand key
                "k": "string", // article key
                "w": "string", // weight
                "t":"number", // time added/changed
                "dum": "string", // default unit of measurement
                "um": {     //unit of measurement
                    "00001": {
                        "k": "string", // key
                        "e": 1, // equals | number *default 1
                        "n": "string" // name
                    }
                }
            }
        },
        "articlesSettings": {
            "Vf3A4qxoWCHPoYdYjG3J": {
                "a": "number", //amount
                "b": { // bonuses list
                    "0101": {
                        "a": "number", // amount
                        "f": "boolean", // fixed * bool true|false
                        "n": "string", // name
                        "d": "string", // description
                        "k":"string" // key
                    }
                },
                "k":"string",//key
                "t":"number",//time added
                "s": { // surcharges list
                    "0101": {
                        "a": "number", // amount
                        "f": "boolean", // fixed * bool true|false
                        "n": "string",// name
                        "d": "string", // description
                        "k":"string" // key
                    }
                },
            }
        },
        "banks": {
            "0001": { // bank code
                "k": "string", // bank code
                "n": "string",   // bank name
                "t":"number"// time added/changed
            }
        },
        "brands": {
            "00001": { // brand key
                "k": "string", // brand key
                "n": "string",   // brand name
                "t":"number"// time added/changed
            }
        },
        "clients": {
            "00001": { // client key
                "a": {  // address list
                    "00001": {
                        "a": "string", // address
                        "c": "string", // country
                        "d": "string", // description | example: "work"
                        "n": "string", // neighborhood
                        "s": "string", // state
                        "z": "string" //  zip
                    }
                },
                "e": {  //email list
                    "00001": {
                        "d": "string", // description | example: "work"
                        "e": "string" //  email
                    }
                },
                "f": { //fiscal info
                    "c": "string", // cuit | cuil
                    "v": "string" // vat key
                },
                "i": "string", //id number
                "it": "string", // id type | like dni, passport,root
                "k": "string", // client key
                "n": "string", // client name
                "bn": "string", // business name
                "p": {  //phone list
                    "00001": { //phone key
                        "k":"string", //phone key
                        "d": "string", //description
                        "p": "string"  // phone number
                    }
                },
                "pl": "string", // price list key
                "pi": "string", // url profile image
                "sc": "string", // sale condition key
                "s": { //sellers list
                    "00001": true // seller key * bool true | false
                },
                "b": { //bonus list
                    "WXzdjUjQXwWXOWSNWmENH": { //bonus key
                        "k":"string",//key
                        "a": 10, //amount
                        "f": "boolean", // fixed  * bool true | false
                        "n": "string",// name
                        "d": "string", // description
                    }
                },
                "su": { //surcharge list
                    "WXzdjUjQXwWXOWSNWmENH": { //surcharge key
                        "k":"string",//key
                        "a": 10, //amount
                        "f": "boolean", // fixed  * bool true | false
                        "n": "string",// name
                        "d": "string", // description
                    }
                },
                "ta": { // taxes list
                    "WXzdjUjQXwWXOWSNWmENH": { //tax key
                        "k":"string",//key
                        "a": 10, //amount
                        "f": "boolean", // fixed * bool true | false
                        "n": "string", // name
                        "d": "string",  // description
                    }
                },
                "t":"number" // time added/changed
            }
        },
        "collections": {
            "VRfZ4okA0xQAZ3oE5GKj": { // collection key
                "c": { // client info
                    "f": { // fiscal info
                        "c": "string", // cuil-cuit
                        "v": "string", // vat key
                    },
                    "i": "string",// id number
                    "it":"string", // id type, like dni,root,passport
                    "n": "string", //ma,e
                    "pl": "string",// price list key
                    "sc": "string",// sale condition key
                },
                "id": { // imputed documents list
                    "1GxFloYeHzVMNXxyVtEM": { // imputed document key
                        "c": { // client info
                            "k": "string", // client key
                            "n": "string", // client name
                        },
                        "d": { // document info
                            "c": "string", // document code
                            "d": "number", // date
                            "dd": "number", // due date
                            "n": "string", // number
                            "ia": "number",// initial amount
                            "pa": "number", // paid amount
                            "pos": "string", // point of sale
                            "qn": "number", //quote number
                            "t": "string", // type
                        },
                        "k": "string", //document key
                    },
                },
                "l": "string",// license key
                "p": { // position
                    "c": { //coordinates
                        "la": "string",// latitude
                        "lo": "string" // longitude
                    },
                    "m": "boolean" // mocked
                },
                "py": { // payments list
                    "56vVH3Qeg7ixH7bajFO4": { //payment key
                        "a": "number", // amount
                        "k": "string",// key
                        "m": "number",// method
                        "t": "number",// time
                    },
                },
                "s": "string", // seller key
                "st": "number", // status
                "t": "number", // time
                "r": "number", // receipt number
                "ta": "number",// total amount
                "k":"string"//key
            }
    					},
        "companies": {
            "00001": {
                "k":"string",// company key
                "n": "string", //    name
                "t":"number" // time added/changed
            }
        },
        "currentAccount": {
            "1GxFloYeHzVMNXxyVtEM": { // key
                "c": { // client info
                    "k": "string", // client key
                    "n": "string", // client name
                },
                "d": { // document info
                    "c": "string", // document code
                    "d": "number", // date
                    "dd": "number", // due date
                    "n": "string", // number
                    "ia": "number",// initial amount
                    "pa": "number", // paid amount
                    "pos": "string", // point of sale
                    "qn": "number", //quote number
                    "t": "string", // type
                },
                "k": "string", //document key
                "t":"number" // time added/changed
            }
        },
        "deposits": {
            "HttPRGVB7m7Ie8uGJHzX": { // deposit key
                "k":"string", // key
                "n": "string",  //name
                "t":"number"// time added/changed

            }
        },
        "groupers": {
            "Uiw2pQUS3gU8XTieMVna": { // key
                "a": { // articles list
                    "QU63Lm6CaMspN0qXEuVR": { // article key
                        "k":"string", // key
                        "o": "number", // order
                    },
                },
                "g": { // groupers list
                    //... repeat groupers structure
                },
                "k":"string", // key
                "n": "string", //name
                "i": "string", // image
                "t":"number"// time added/changed

            }
        },
        "news": {
            "TtQ6O940SuaONNLpY1Hw": { //key
                "de": { // destination
                    "2": "boolean" // destination key * bool true | false
                },
                "k":"string", // key
                "i": "string",// image
                "tm": "number", // time of new
                "ti": "string", // title
                "d": "string", // description
                "t":"number" // time added/changed
            }
        },
        "notBuy": {
            "MY4Md2hxTnhZDjz4Fg0f": {
                "c": { // client info
                    "f": { // fiscal info
                        "c": "string", // cuil-cuit
                        "v": "string", // vat key
                    },
                    "i": "string",// id number
                    "it":"string", // id type, like dni,root,passport
                    "n": "string", //ma,e
                    "pl": "string",// price list key
                    "sc": "string",// sale condition key
                },
                "l": "string",// license key
                "p": { // position
                    "c": { //coordinates
                        "la": "string",// latitude
                        "lo": "string" // longitude
                    },
                    "m": "boolean" // mocked
                },
                "r": { // reason
                    "k": "string",// key
                    "n": "string" // name
                },
                "s": "string", // seller key
                "t": "number" // time
            }
        },
        "offers": {
            "0001":{ // offer key
                "de": { // destination
                    "2": "boolean" // destination key * bool true | false
                },
                "k":"string", // key
                "i": "string",// image
                "tm": "number", // time of new
                "ti": "string", // title
                "d": "string", // description
                "p":"string", // pack key
                "t":"number" // time added/changed
            }

        },
        "orders": {
            "sBzIu8La6HBOhjMQ1ySR": {
                "c": { // client info
                    "f": { // fiscal info
                        "c": "string", // cuil-cuit
                        "v": "string", // vat key
                    },
                    "i": "string",// id number
                    "it":"string", // id type, like dni,root,passport
                    "n": "string", //ma,e
                    "pl": "string",// price list key
                    "sc": "string",// sale condition key
                },
                "l": "string",// license key
                "p": { // position
                    "c": { //coordinates
                        "la": "string",// latitude
                        "lo": "string" // longitude
                    },
                    "m": "boolean" // mocked
                },
                "f": "boolean",// finished
                "gb": { // global bonus
                    "f": "boolean", // fixed
                    "a": "number" // amount
                },
                "tt": { // totals
                    "to": "number", // total order
                    "tp": "number", // total packs
                    "t": "number" // total
                },
                "ts": "number", // time start
                "te": "number", // time end
                "s": "number", // state
                "se": "string", // seller key
                "sc": "string", // sale condition key
                "or": "number", // origin
                "co": "string",// company
                "ob": "qwe",// observation
                "o": { // order detail
                    "dTjnqBSYWqIIJlyRosNo": {
                        "b": "number", // bonus
                        "e": { // extras list
                            "00001": { // extra key
                                "di": "boolean",// discount
                                "s": "boolean",// surcharge
                                "a": "number", //amount
                                "f": "boolean", // fixed * bool true|false
                                "n": "string", // name
                                "d": "string", // description
                                "k": "string" // key
                            }
                        },
                        "k": "string",// key
                        "n": "string",//name
                        "nc": "number",// net cost
                        "pld": { //price list data
                            "t": { // taxes list
                                "00001": { // tax key
                                    "a": "number", //amount
                                    "f": "boolean", // fixed * bool true|false
                                    "n": "string", // name
                                    "d": "string", // description
                                    "k": "string" // key
                                }
                            },
                            "f": { // forced price
                                "a": "number", //amount
                                "f": "boolean", // fixed * bool true|false
                            },
                            "n": "string",// name
                            "b": { // bonuses list
                                "00001": { // bonus key
                                    "a": "number", //amount
                                    "f": "boolean", // fixed * bool true|false
                                    "n": "string", // name
                                    "d": "string", // description
                                    "k": "string" // key
                                }
                            },
                            "k": "string" // key
                        },
                        "q": "number",// quantity
                        "r": "string",// reference
                        "s": "number",// subtotal
                        "t": "number"// total
                    }
                },
                "t":"number", // time added
                "k":"string" // key
            },
        },
        "packs": {
            "ML14VV97ZRhXzvT6F2WT": { // pack key
                "a": { // articles list
                    "yndo39xi2": { // article key
                        "k": "string",// key
                        "q": "number", // quantity
                        "b": { //bonus
                            "a": "number", //amount
                            "f": "boolean" // fixed * boolean true|false
                        }
                    }
                },
                "fp": { //foreced Price
                    "a": "number", //amount
                    "f": "boolean" //fixed * boolean true|false
                },
                "b": { // bonus
                    "a": "number", //amount
                    "f": "boolean", // fixed * boolean true|false
                },
                "n": "string", //name
                "k": "string", // key
                "t":"number"// time added/changed
            }
        },
        "priceList": {
            "ZYV06DpEFIAwBFY6kYKL": { // price list key
                "a": { // articles list
                    "L12do7ZoaLn8KDmmE5uz": { // it must be the key to a article
                        "f": { // forced price
                            "a": "number", //amount
                            "f": "boolean", // fixed * bool true|false
                        },
                        "u":{ // utility
                            "a":"number", //amount
                            "f":"boolean" // fixed * bool true|false
                        },
                        "t": { // taxes list
                            "00001": { // tax key
                                "a": "number", //amount
                                "f": "boolean", // fixed * bool true|false
                                "n": "string", // name
                                "d": "string", // description
                                "k": "string" // key
                            }
                        },
                        "b": { // bonuses list
                            "00001": { // bonus key
                                "a": "number", //amount
                                "f": "boolean", // fixed * bool true|false
                                "n": "string", // name
                                "d": "string", // description
                                "k": "string" // key
                            }
                        },
                        "k": "string" // key
                    }
                },
                "k": "string", // key
                "n": "string", //name
                "e": { // extras list
                    "00001": { // extra key
                        "di": "boolean",// discount
                        "s": "boolean",// surcharge
                        "a": "number", //amount
                        "f": "boolean", // fixed * bool true|false
                        "n": "string", // name
                        "d": "string", // description
                        "k": "string" // key
                    }
                }
            }
        },
        "reasonsNotBuy": {
            "89n6Tewj2gDp3f3Gpghi": { // reason key
                "n": "string",// name
                "t":"number", // time added/changed
                "k":"string"  // key
            }
        },
        "routes": {
            "00001":{ //route key
                "cl": {
                 "00001": { // it must be the key to a client
                        "k":"string",// key
                        "o": "number" // client order
                    }
                },
                "d": { // days list
                    "0": "boolean" // day number 0:Sunday, 6:Saturday | true
                },
                "n": "string", // name
                "s": { // sellers list
                    "00001": "boolean" // it must be the key to a seller  | true
               },
               "k":"string",//key
               "t":"number" // time added/changed

            }
        },
        "salesCondition": {
            "SmEzpw5WdjQNWXUOHUJn": {
                "b": { // bonuses list
                    "0101": {
                        "a": "number", // amount
                        "f": "boolean", // fixed * bool true|false
                        "n": "string", // name
                        "d": "string", // description
                        "k":"string" // key
                    }
                },
                "d": "string", // description
                "mc": "string",// money code
                "n": "string", // name
                "s": { // surcharges list
                    "0101": {
                        "a": "number", // amount
                        "f": "boolean", // fixed * bool true|false
                        "n": "string",// name
                        "d": "string", // description
                        "k":"string" // key
                    }
                },
                "t":"number" // time added/changed
            }
        },
        "sellers": {
            "00001": {

                "i": "string", // id number
                "it":"string", // id type, like dni,root,passport
                "k":"string", //key
                "n": "string", // name
                "p": "string", //password
                "pi": "string", // profile image
                "t":"number" // time added/changed
            }
        },
        "stock": {
            "00100001": { // key composed by deposit key and article key
                "a": "string", //it must be a key of a article
                "d": "string", // it must be a key of a deposit
                "q": "number", // quantity
                "k":"string",  // key
                "t":"number"// time added/changed
            }
        },
        "vat": {
            "001": { // vat key
                "n": "string", // name
                "k":"string", // key
                "t":"number" //time added/changed
            }
        }
    }
    ```
paths:
  "/transaction/":
    parameters: []
    post:
      tags:
      - Read
      summary: Get information from database
      description: |-
        Using the `action` parameter in read, you can get information from database.
        It is possible to specify the search path `ref` in each search.

         In this example `sellers` represents a reference to the table that contains all the sellers, with only that reference you get the whole list of sellers.
        Then with `sellers/001` you can get that seller specifically. You can continue specifying the route to obtain more specific data such as name or password.
      operationId: readDB
      parameters:
      - in: header
        name: Content-Type
        description: application/json
        required: true
        type: string
        x-example: Content-Type:application/json
      - in: body
        name: body
        description: Read specific data
        required: true
        schema:
          "$ref": "#/definitions/BodyRead"
      produces:
      - application/json
      responses:
        '200':
          description: ''
          examples:
            application/json:
              data:
                code: '001'
                id: '0000'
                name: CAJERO CENTRAL
                password: '0'
        '400':
          description: ''
          examples:
            application/json:
              Error: Data Not Found
              Request:
                token: oP0zw3GV233OxPofGDin
                version: '1.1'
                action: read
                ref: sellers/`Wrong seller`
        '403':
          description: ''
          examples:
            application/json:
              Error: Invalid Token
              Request:
                token: "`Wrong Token`"
                version: '1.1'
                action: read
                ref: sellers/001
        '405':
          description: ''
          examples:
            application/json:
              Error: Invalid Action
              Request:
                token: oP0zw3GV233OxPofGDin
                version: '1.1'
                action: "`Wrong action`"
                ref: sellers/001
  "/transaction":
    parameters: []
    post:
      tags:
      - Set
      summary: Set information in database
      description: |-
        Using the `action` parameter in set, you can set information in database.
        It is necessary to specify the reference path `ref`.

         In this example `sellers` represents a reference to the table that contains all the sellers, with only that reference you can set the whole list of sellers.
        Then with `sellers/0001` you can set that seller specifically. You can continue specifying the route to set more specific data such as name or password.
      operationId: setDB
      parameters:
      - in: header
        name: Content-Type
        description: application/json
        required: true
        type: string
        x-example: Content-Type:application/json
      - in: body
        name: body
        description: Set specific data
        required: true
        schema:
          "$ref": "#/definitions/BodySet"
      produces:
      - application/json
      responses:
        '200':
          description: ''
          examples:
            application/json:
              success: Successfully data!
        '400':
          description: ''
          examples:
            application/json:
              Error: There is no data to set
              Request:
                token: oP0zw3GV233OxPofGDin
                version: '1.1'
                action: set
                ref: sellers/001
        '403':
          description: ''
          examples:
            application/json:
              Error: Invalid Token
              Request:
                token: "`Wrong Token`"
                version: '1.1'
                action: set
                ref: sellers/001
                val:
                  code: '001'
                  id: '0000'
                  name: CAJERO CENTRAL
                  password: '0'
        '405':
          description: ''
          examples:
            application/json:
              Error: Invalid Action
              Request:
                token: oP0zw3GV233OxPofGDin
                version: '1.1'
                action: "`Wrong action`"
                ref: sellers/001
                val:
                  code: '001'
                  id: '0000'
                  name: CAJERO CENTRAL
                  password: '0'
  "/transaction/#":
    parameters: []
    post:
      tags:
      - Update
      summary: Update information in database
      description: |-
        Using the `action` parameter in set, you can update information in database.
        It is necessary to specify the reference path `ref`.

         In this example `sellers` represents a reference to the table that contains all the sellers, with only that reference you can update the whole list of sellers.
        Then with `sellers/0001` you can update that seller specifically. You can continue specifying the route to update more specific data such as name or password.
      operationId: updateDB
      parameters:
      - in: header
        name: Content-Type
        description: application/json
        required: true
        type: string
        x-example: Content-Type:application/json
      - in: body
        name: body
        description: Update specific data
        required: true
        schema:
          "$ref": "#/definitions/BodySet"
      produces:
      - application/json
      responses:
        '200':
          description: ''
          examples:
            application/json:
              success: Successfully data!
        '400':
          description: ''
          examples:
            application/json:
              Error: There is no data to set
              Request:
                token: oP0zw3GV233OxPofGDin
                version: '1.1'
                action: set
                ref: sellers/001
        '403':
          description: ''
          examples:
            application/json:
              Error: Invalid Token
              Request:
                token: "`Wrong Token`"
                version: '1.1'
                action: set
                ref: sellers/001
                val:
                  code: '001'
                  id: '0000'
                  name: CAJERO CENTRAL
                  password: '0'
        '405':
          description: ''
          examples:
            application/json:
              Error: Invalid Action
              Request:
                token: oP0zw3GV233OxPofGDin
                version: '1.1'
                action: "`Wrong action`"
                ref: sellers/001
                val:
                  code: '001'
                  id: '0000'
                  name: CAJERO CENTRAL
                  password: '0'
  "/transaction/?":
    parameters: []
    post:
      tags:
      - Delete
      summary: Delete information from database
      description: |-
        Using the `action` parameter in set, you can delete information in database.
        It is necessary to specify the reference path `ref`.

         In this example `sellers` represents a reference to the table that contains all the sellers, with only that reference you can delete the whole list of sellers.
        Then with `sellers/0001` you can delete that seller specifically. You can continue specifying the route to delete more specific data such as name or password.
      operationId: deleteDB
      parameters:
      - in: header
        name: Content-Type
        description: application/json
        required: true
        type: string
        x-example: Content-Type:application/json
      - in: body
        name: body
        description: Delete specific data
        required: true
        schema:
          "$ref": "#/definitions/BodyDelete"
      produces:
      - application/json
      responses:
        '200':
          description: ''
          examples:
            application/json:
              success: Successfully data!
        '400':
          description: ''
          examples:
            application/json:
              Error: There is no data to set
              Request:
                token: oP0zw3GV233OxPofGDin
                version: '1.1'
                action: set
                ref: sellers/001
        '403':
          description: ''
          examples:
            application/json:
              Error: Invalid Token
              Request:
                token: "`Wrong Token`"
                version: '1.1'
                action: set
                ref: sellers/001
                val:
        '405':
          description: ''
          examples:
            application/json:
              Error: Invalid Action
              Request:
                token: oP0zw3GV233OxPofGDin
                version: '1.1'
                action: "`Wrong action`"
                ref: sellers/001
                val:
  "/struct/":
    parameters: []
definitions:
  BodyRead:
    type: object
    required:
    - action
    - version
    - token
    - ref
    properties:
      action:
        description: read  &nbsp;&nbsp;->&nbsp;&nbsp; (Action to Read)
        type: string
        example: read
      version:
        description: 1.1  &nbsp;&nbsp;&nbsp;&nbsp;->&nbsp;&nbsp; (Current Version)
        type: string
        example: '1.1'
      token:
        description: Token of the environment
        type: string
        example: Tzc9amhGTH2cHvmao1t2
      ref:
        description: Reference Table
        type: string
        example: sellers/001
  BodySet:
    type: object
    required:
    - action
    - version
    - token
    - ref
    - val
    properties:
      action:
        description: set  &nbsp;&nbsp;->&nbsp;&nbsp; (Action to Set)
        type: string
        example: set
      version:
        description: 1.1  &nbsp;&nbsp;&nbsp;&nbsp;->&nbsp;&nbsp; (Current Version)
        type: string
        example: '1.1'
      token:
        description: Token of the environment
        type: string
        example: Tzc9amhGTH2cHvmao1t2
      ref:
        description: Reference Table
        type: string
        example: sellers
      val:
        description: Data to Set
        type: string
        example:
          code: '001'
          id: '0000'
          name: CAJERO CENTRAL
          password: '0'
  BodyDelete:
    type: object
    required:
    - action
    - version
    - token
    - ref
    - val
    properties:
      action:
        description: set  &nbsp;&nbsp;->&nbsp;&nbsp; (Action to Set)
        type: string
        example: set
      version:
        description: 1.1  &nbsp;&nbsp;&nbsp;&nbsp;->&nbsp;&nbsp; (Current Version)
        type: string
        example: '1.1'
      token:
        description: Token of the environment
        type: string
        example: Tzc9amhGTH2cHvmao1t2
      ref:
        description: Reference Table
        type: string
        example: sellers/001
      val:
        description: null  &nbsp;&nbsp;->&nbsp;&nbsp; (Must be null)
        type: string
        example:
